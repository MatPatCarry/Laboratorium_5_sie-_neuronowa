{"trial_id": "0000", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "n_hidden", "default": 2, "conditions": [], "min_value": 0, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "n_neurons", "default": null, "conditions": [], "min_value": 8, "max_value": 64, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 1e-05, "conditions": [], "values": [1e-05, 5e-05, 0.0001, 0.0005, 0.001, 0.0005, 0.01, 0.05], "ordered": true}}], "values": {"n_hidden": 3, "n_neurons": 8, "learning_rate": 0.0005, "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 250, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 215, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\tuners\\hyperband.py\", line 401, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 284, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 211, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 142, in fit\n    return model.fit(*args, **kwargs)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 67, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\csv.py\", line 143, in writeheader\n    return self.writerow(header)\n  File \"c:\\Users\\Piotr\\anaconda3\\lib\\csv.py\", line 154, in writerow\n    return self.writer.writerow(self._dict_to_list(rowdict))\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xbf in position 79: invalid start byte\n"}